! Input/Output Tool Kit (IOTK)
! Copyright (C) 2004-2006 Giovanni Bussi
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

!------------------------------------------------------------------------------!
! Inclusion of configuration file
#include "iotk_config.h"
!------------------------------------------------------------------------------!

>##############################################################################<
># inclusion of the spp definitions
>include iotk_include.sh
>##############################################################################<
># inclusion of the auxiliary macros
#include "iotk_auxmacros.h"
>##############################################################################

> REVISION='$Revision: 1.1.1.1 $'
> REVISION="${REVISION//${dol}/}"


module iotk_stream_interf
implicit none
private

public :: iotk_stream_read
public :: iotk_stream_backspace

interface iotk_stream_read
  subroutine iotk_stream_read_x(unit,header,setpos,getpos,ierr)
    use iotk_base
    implicit none
    integer,                                    intent(in)  :: unit
    integer(iotk_header_kind),                  intent(out) :: header
    integer,                          optional, intent(in)  :: setpos
    integer,                          optional, intent(out) :: getpos
    integer,                          optional, intent(out) :: ierr
  end subroutine iotk_stream_read_x
> for type in $types ; do
> eval "LENSTAR=\$LENSTAR_$type"
>   for kind in $kinds ; do
#ifdef __IOTK_$type$kind
  subroutine iotk_stream_read_${type}${kind}(unit,header,val,setpos,getpos,noval,ierr)
    use iotk_base
    implicit none
    integer,                                      intent(in)  :: unit
    integer(iotk_header_kind),                    intent(out) :: header
    ${type}(kind=iotk_$type$kind$LENSTAR),      intent(out) :: val(:)
    integer,                            optional, intent(in)  :: setpos
    integer,                            optional, intent(out) :: getpos
    logical,                            optional, intent(in)  :: noval
    integer,                            optional, intent(out) :: ierr
  end subroutine iotk_stream_read_${type}${kind}
#endif
>   done
> done
end interface

interface iotk_stream_backspace
  subroutine iotk_stream_backspace_x(unit,ierr)
    implicit none
    integer,           intent(in)  :: unit
    integer, optional, intent(out) :: ierr
  end subroutine iotk_stream_backspace_x
end interface

end module iotk_stream_interf

