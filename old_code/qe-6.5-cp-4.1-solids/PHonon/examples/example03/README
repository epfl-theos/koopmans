
This example illustrates how to calculate electron-phonon interaction
c oefficients, for a (444) Monkhorst-Pack (MP) grid of q-points, in fcc Al.

IMPORTANT NOTICE: the calculation of electron-phonon coefficients is tricky.
Do not attempt it unless you have a clear idea of the technical problems
(e.g. very slow convergence with k-point grid,, divergence at q=>0 for optical
modes). Carefully read the relevant literature first.

The calculation proceeds as follows (for the meaning of the cited input
variables see the appropriate INPUT_* file)

1) make a self-consistent calculation for Al using a dense grid of k-points.
   The dense grid must contain all k and k+q grid points used in the
   subsequent electron-phonon calculation and must be dense enough to
   produce accurate el-phon coefficients (in particular the double-delta 
   integral at Ef is very critical). Note that you have to use unshifted
   grids (k1=k2=k3=0) only, that include k=0!
   This example uses a (16 16 16) MP grid. Note that the k-point grids
   used here are NOT dense enough for a serious calculation!!!
   The option "la2F=.true." instructs the code to save data into a 
   "a2Fsave" file, subsequently read during the el-phon calculation
   (input=al.scf.fit.in, output=al.scf.fit.out) 

2) make a self-consistent calculation for Al using a grid of k-points
   that is suitable for good self-consistency and phonon calculation.
   This example uses a (888) MP grid.
   (input=al.scf.in, output=al.scf.out) 

3) make the phonon and electron-phonon calculation for the grid of q-points.
   Specify elph=.true., and the name of a file where the derivative of the
   potential is stored "fildvscf". This example uses a (444) MP grid of
   q-points (nq1=4, nq2=4, nq3=4).
   The output contains the results for the el-ph coefficient at each q-point
   lambda(q), gamma(q), and the double-delta integral at several values of
   the gaussian broadening (set in file PH/elphon.f90). These are useful
   for convergence testing.
   (input=al.elph.in, output=al.elph.out) 
   The results are also written into output files "a2Fq2r.*", one per value
   of the gaussian broadening, for further use.

4) Bring to r-space both force constants and el-phon coefficients using "q2r.x"
   Output in files "a2Fmatdyn.*", one per value of the gaussian broadening

5) Calculate gamma on selected lines using "matdyn.x" (dos=.false.) 

6) Calculate  lambda coefficient (in file "lambda") and the a^2F(omega)
   function using "matdyn.x" (dos=.true.)

7) Calculate lambda coefficient (in "lambda.out") and Tc using "lambda.x"

