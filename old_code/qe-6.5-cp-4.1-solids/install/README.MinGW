Notes for cross-compiling Quantum ESPRESSO in serial/parallel from Fedora Linux
to 32-bit and 64-bit Windows using the provided MinGW64/gcc toolchain.

Set up a suitable (virtual) machine and install the following packages:
make git vim-enhanced dos2unix htmldoc latex2html mingw32-nsis
mingw32-gcc-gfortran mingw64-gcc-gfortran tcl tcllib netpbm-progs

Create user 'winbuild' and set password.

Log in and create ssh key pair and append the public key the .ssh/authorized_keys
file of the repository account for automatic file transfer

Edit $HOME/.bash_profile to set environment variables for depositing files
QE4WIN_REPO_HOST QE4WIN_REPO_USER QE4WIN_REPO_DIR

Clone adjusted espresso tree via (XXX: change to svn after completion):
 git clone git@bitbucket.org:akohlmey/espresso-qmmm.git espresso-qmmm
 cd espresso-qmmm
 git checkout mingw-build

From now on, to build and sync the windows installers to the repository with:
cd ~/espresso-qmmm/
git pull
./install/build-mingw-cross.sh
./install/sync-mingw-to-repo.sh

To generate a suitable OpenBLAS dll download the latest OpenBLAS release
source package, unpack it, and change into the unpacked directory

make clean
make BINARY=32 TARGET=CORE2 USE_THREAD=0 CC=i686-w64-mingw32-gcc \
  FC=i686-w64-mingw32-gfortran HOSTCC=gcc 
mkdir -p ~/espresso-qmmm/install/blas-win32/
cp libopenblas.dll  ~/espresso-qmmm/install/blas-win32/

make clean
make BINARY=64 TARGET=CORE2 USE_THREAD=0 CC=x86_64-w64-mingw32-gcc \
  FC=x86_64-w64-mingw32-gfortran HOSTCC=gcc 
mkdir -p ~/espresso-qmmm/install/blas-win64/
cp libopenblas.dll  ~/espresso-qmmm/install/blas-win64/


